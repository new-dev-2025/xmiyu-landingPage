(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=n(e);fetch(e.href,r)}})();const g="https://tf.manager.kyhalan.vip/api/v1/get_appInfo",p="https://tf.manager.kyhalan.vip/api/v1/get_tfLink",d="https://tf.manager.kyhalan.vip/api/v1/update_tfLink",l={urls:{testflight:"https://testflight.apple.com/join/PKas1Kgd",androidApk:"https://github.com/payu-intrepos/Android-SDK-Sample-App/raw/main/SampleApp.apk",alternateDownload:"https://d11scqmct6emw5.cloudfront.net/gglqsonp6islj1",testflightAppStore:"https://apps.apple.com/app/testflight/id899247664"}};let i=null,a=null;function h(){return"user_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}function m(){let t=localStorage.getItem("gg_user_id");return t||(t=h(),localStorage.setItem("gg_user_id",t),console.log("Generated new user ID:",t)),t}async function T(){const t=m();try{console.log("Requesting TestFlight link for user:",t);const o=await fetch(`${p}?user_id=${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const n=await o.json();return console.log("TestFlight link response:",n),n.link&&n.link.trim()!==""?(await w(t),n.link):(console.log("No TestFlight link available, using alternate download"),(await u()).urls.alternateDownload)}catch(o){return console.error("Failed to get TestFlight link:",o),console.log("Using alternate download as fallback"),(await u()).urls.alternateDownload}}async function w(t){try{console.log("Updating TestFlight link status for user:",t);const o=await fetch(d,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:t})});o.ok?console.log("TestFlight link status updated successfully"):console.warn("Failed to update TestFlight link status:",o.status)}catch(o){console.error("Error updating TestFlight link status:",o)}}async function f(){return i||a||(a=(async()=>{try{console.log("Fetching configuration from API...");const t=await fetch(g);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const n=(await t.json()).find(e=>e.app_name==="GG");if(!n)throw new Error("GG app configuration not found in API response");const s={urls:{testflight:n.TF_url||l.urls.testflight,androidApk:n.apk_url,alternateDownload:n.alternate_url,testflightAppStore:n.TF_url}};return i=s,console.log("Configuration loaded from API:",s),s}catch(t){return console.warn("Failed to load config from API, using defaults:",t),i=l,l}finally{a=null}})(),a)}let y=l;const u=f;f().then(t=>{Object.assign(y,t)});const F={width:200,height:200,color:{dark:"#000000",light:"#FFFFFF"}};export{T as a,y as c,u as g,F as q};
